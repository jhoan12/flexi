import { types } from "../types/types";

const initialState = {
  guias: [],
  guia: {
    debe: null,
    celularD: "",
    nombreD: "",
    timeline: null,
    identificacionD: null,
    valor: null,
    transportadora: "",
    departamentoD: "",
    tipo_doc_dest: "",
    detalles: {
      seguro: null,
      peso_con_volumen: null,
      recaudo: null,
      comision_trasportadora: null,
      flete: null,
      peso_liquidar: null,
      peso_real: null,
      total: null,
      comision_heka: null,
    },
    peso: null,
    dane_ciudadR: "",
    ancho: "",
    recoleccion_esporadica: null,
    correoD: "",
    departamentoR: "",
    id_user: "",
    telefonoD: "",
    direccionR: "",
    estado: "",
    direccionD: "",
    costo_envio: null,
    ciudadD: "",
    ciudadR: "",
    correoR: "",
    numeroGuia: "",
    nombreR: "",
    seguro: null,
    celularR: "",
    dane_ciudadD: "",
    id_archivoCargar: "",
    has_sticker: false,
    observaciones: "",
    ultima_actualizacion: {
      seconds: null,
      nanoseconds: null,
    },
    dice_contener: "",
    fecha: "",
    alto: "",
    centro_de_costo: "",
    seguimiento_finalizado: false,
    largo: "",
    type: "",
    id_heka: "",
  },
};

export const guiasReducer = (state = initialState, action) => {
  switch (action.type) {
    case types.getGuia:
      return {
        ...state,
        debe: action.payload.debe,
        celularD: action.payload.celularD,
        nombreD: action.payload.nombreD,
        timeline: action.payload.timeline,
        identificacionD: action.payload.identificacionD,
        valor: action.payload.valor,
        transportadora: action.payload.transportadora,
        departamentoD: action.payload.departamentoD,
        tipo_doc_dest: action.payload.tipo_doc_dest,
        detalles: {
          seguro: action.payload.seguro,
          peso_con_volumen: action.payload.peso_con_volumen,
          recaudo: action.payload.recaudo,
          comision_trasportadora: action.payload.comision_trasportadora,
          flete: action.payload.flete,
          peso_liquidar: action.payload.peso_liquidar,
          peso_real: action.payload.peso_real,
          total: action.payload.total,
          comision_heka: action.payload.comision_heka,
        },
        peso: action.payload.peso,
        dane_ciudadR: action.payload.dane_ciudadR,
        ancho: action.payload.ancho,
        recoleccion_esporadica: action.payload.recoleccion_esporadica,
        correoD: action.payload.correoD,
        departamentoR: action.payload.departamentoR,
        id_user: action.payload.id_user,
        telefonoD: action.payload.telefonoD,
        direccionR: action.payload.direccionR,
        estado: action.payload.estado,
        direccionD: action.payload.direccionD,
        costo_envio: action.payload.costo_envio,
        ciudadD: action.payload.ciudadD,
        ciudadR: action.payload.ciudadR,
        correoR: action.payload.correoR,
        numeroGuia: action.payload.numeroGuia,
        nombreR: action.payload.nombreR,
        seguro: action.payload.seguro,
        celularR: action.payload.celularR,
        dane_ciudadD: action.payload.dane_ciudadD,
        id_archivoCargar: action.payload.id_archivoCargar,
        has_sticker: action.payload.has_sticker,
        observaciones: action.payload.observaciones,
        ultima_actualizacion: {
          seconds: action.payload.seconds,
          nanoseconds: action.payload.nanoseconds,
        },
        dice_contener: action.payload.dice_contener,
        fecha: action.payload.fecha,
        alto: action.payload.alto,
        centro_de_costo: action.payload.centro_de_costo,
        seguimiento_finalizado: action.payload.seguimiento_finalizado,
        largo: action.payload.largo,
        type: action.payload.type,
        id_heka: action.payload.id_heka,
      };
      case types.getAllGuias:
        return{
          ...state,
          guias: action.payload.guias
        }
    default:
      return state;
  }
};
